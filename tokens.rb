Tokens = {
  /\A\w+;\w+\z/   => :VAR_WITH_TYPE,
  /\A[0-9]+\z/    => :INT_LITERAL,
  /\A\".+\"\z/    => :STRING_LITERAL,
  /\A\n\z/        => :NEWLINE,
  /\Aif\z/        => :IF,
  /\Aelse\z/      => :ELSE,
  /\Awhile\z/     => :WHILE,
  /\Afor\z/       => :FOR,
  /\A\(\z/        => :SUB,
  /\A\)\z/        => :BUS,
  /\A->\z/        => :IN,
  /\A,\z/         => :COMMA,
  /\A\+=\z/       => :PLUS_EQUALS,
  /\A-=\z/        => :MINUS_EQUALS,
  /\A\*=\z/       => :TIMES_EQUALS,
  /\A\/=\z/       => :DIVIDE_EQUALS,
  /\Ais\z/        => :CONST_DEF,
  /\A\{\z/        => :OPEN,
  /\A\}\z/        => :CLOSE,
  /\A;\z/         => :SEP,
  /\Afun\z/       => :FUN,
  /\A=>\z/        => :FUN_ARROW,
  /\A=\z/         => :EQUALS,
  /\Adie\z/       => :DIE,
  /\Awill\z/      => :WILL,
  /\Atry\z/       => :TRY,
  /\Aon\z/        => :ON,
  /\Aint\z/       => :TYPE_INT,
  /\Aflt\z/       => :TYPE_FLT,
  /\Astr\z/       => :TYPE_STR,
  /\A\w+\z/       => :SYMBOL,
  /\A\+\z/        => :PLUS,
  /\A-\z/         => :MINUS,
  /\A\*/          => :TIMES,
  /\A\*/          => :DIVIDE,
  /\A%\z/         => :MOD,
  /\A>=\z/        => :GREATER_EQ,
  /\A<=\z/        => :LESSER_EQ,
  /\A>\z/         => :GREATER,
  /\A<\z/         => :LESSER,
  /\A==\z/        => :EQUALS?,
  /\A!=\z/        => :NOT_EQUALS?,
  /\A\W\z/        => :SPACE,
}

