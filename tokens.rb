Tokens = {
  /\A\w+\s+=\s+[0-9]+/         => :INT_LITERAL_ASSIGN,
  /\A\w+\s+=\s+"[^"]*"/        => :STRING_LITERAL_ASSIGN,
  /\A\w+\s+=\s+[0-9]+\.[0-9]+/ => :FLOAT_LITERAL_ASSIGN,
  /\A\w+\s+=\s+\w+/            => :SYMBOL_ASSIGN,
  /\A\w+;\w+/   => :VAR_WITH_TYPE,
  /\Aprint(.+)/ => :PRINT,
  /\A[0-9]+/    => :INT_LITERAL,
  /\A\".+\"/    => :STRING_LITERAL,
  /\A\n/        => :NEWLINE,
  /\A\w+\(.+\)/ => :FUNCTION_CALL,
  /\Aif/        => :IF,
  /\Aelif/      => :ELIF,
  /\Aelse/      => :ELSE,
  /\Awhile/     => :WHILE,
  /\Afor/       => :FOR,
  /\A\(/        => :SUB,
  /\A\)/        => :BUS,
  /\A->/        => :IN,
  /\A,/         => :COMMA,
  /\A\+=/       => :PLUS_EQUALS,
  /\A-=/        => :MINUS_EQUALS,
  /\A\*=/       => :TIMES_EQUALS,
  /\A\/=/       => :DIVIDE_EQUALS,
  /\Ais/        => :CONST_DEF,
  /\A\{/        => :OPEN,
  /\A\}/        => :CLOSE,
  /\A;/         => :SEP,
  /\Afun/       => :FUN,
  /\A=>/        => :FUN_ARROW,
  /\A=/         => :EQUALS,
  /\Adie/       => :DIE,
  /\Awill/      => :WILL,
  /\Atry/       => :TRY,
  /\Aon/        => :ON,
  /\Aint/       => :TYPE_INT,
  /\Aflt/       => :TYPE_FLT,
  /\Astr/       => :TYPE_STR,
  /\A\w+/       => :SYMBOL,
  /\A\+/        => :PLUS,
  /\A-/         => :MINUS,
  /\A\*/        => :TIMES,
  /\A\*/        => :DIVIDE,
  /\A%/         => :MOD,
  /\A>=/        => :GREATER_EQ,
  /\A<=/        => :LESSER_EQ,
  /\A>/         => :GREATER,
  /\A</         => :LESSER,
  /\A==/        => :EQUALS?,
  /\A!=/        => :NOT_EQUALS?,
  /\A\s/        => :SPACE,
  /\A\[/        => :ARRAY_OPEN,
  /\A\]/        => :ARRAY_CLOSE,
  /\A--/        => :COMMENT
}
